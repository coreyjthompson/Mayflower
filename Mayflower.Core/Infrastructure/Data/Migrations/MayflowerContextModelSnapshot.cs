// <auto-generated />
using System;
using Mayflower.Core.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mayflower.Core.Infrastructure.Data.Migrations
{
    [DbContext(typeof(MayflowerContext))]
    partial class MayflowerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mayflower.Core.DomainModels.FinancialAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AvailableBalance")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("FinancialAccountTheme")
                        .HasColumnType("int")
                        .HasColumnName("FinancialAccountThemeId");

                    b.Property<int>("FinancialInstitutionId")
                        .HasColumnType("int");

                    b.Property<decimal>("LedgerBalance")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Nickname")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset>("WhenLastUpdated")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAccountTheme");

                    b.HasIndex("FinancialInstitutionId");

                    b.ToTable("FinancialAccount", (string)null);
                });

            modelBuilder.Entity("Mayflower.Core.DomainModels.FinancialAccountTheme", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("FinancialAccountTheme", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "None",
                            Value = "None"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Savings",
                            Value = "Savings"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Checking",
                            Value = "Checking"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Marketing",
                            Value = "Marketing"
                        });
                });

            modelBuilder.Entity("Mayflower.Core.DomainModels.FinancialInstitution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NickName")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("FinancialInstitution", (string)null);
                });

            modelBuilder.Entity("Mayflower.Core.DomainModels.FinancialTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ExternalTransactionId")
                        .IsRequired()
                        .HasColumnType("varchar(125)");

                    b.Property<int>("FinancialAccountId")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RefNumber")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("WhenPosted")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAccountId");

                    b.ToTable("FinancialTransaction", (string)null);
                });

            modelBuilder.Entity("Mayflower.Core.DomainModels.InactiveReminderReason", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("InactiveReminderReason", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "Unknown",
                            Value = "Unknown"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Completion",
                            Value = "Skipped"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Deleted",
                            Value = "Complete"
                        });
                });

            modelBuilder.Entity("Mayflower.Core.DomainModels.RecurrenceDayOfWeek", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("RecurrenceDayOfWeek", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "Sunday",
                            Value = "Sunday"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Monday",
                            Value = "Monday"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tuesday",
                            Value = "Tuesday"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Wednesday",
                            Value = "Wednesday"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Thursday",
                            Value = "Thursday"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Friday",
                            Value = "Friday"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Saturday",
                            Value = "Saturday"
                        });
                });

            modelBuilder.Entity("Mayflower.Core.DomainModels.RecurrenceOrdinal", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("RecurrenceOrdinal", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "None",
                            Value = "None"
                        },
                        new
                        {
                            Id = 1,
                            Name = "First",
                            Value = "First"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Second",
                            Value = "Second"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Third",
                            Value = "Third"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fourth",
                            Value = "Fourth"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Last",
                            Value = "Last"
                        });
                });

            modelBuilder.Entity("Mayflower.Core.DomainModels.RecurrenceTheme", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("RecurrenceTheme", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Description = "One-time payment",
                            Name = "NoRecurrence"
                        },
                        new
                        {
                            Id = 1,
                            Description = "Daily",
                            Name = "Day"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Weekly",
                            Name = "Week"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Monthly",
                            Name = "Month"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Yearly",
                            Name = "Year"
                        });
                });

            modelBuilder.Entity("Mayflower.Core.DomainModels.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InactiveReason")
                        .HasColumnType("int")
                        .HasColumnName("InactiveReasonId");

                    b.Property<int?>("RecurrenceDayOfMonth")
                        .HasColumnType("int");

                    b.Property<int?>("RecurrenceDayOfWeek")
                        .HasColumnType("int")
                        .HasColumnName("RecurrenceDayOfWeekId");

                    b.Property<int>("RecurrenceInterval")
                        .HasColumnType("int");

                    b.Property<int>("RecurrenceOrdinal")
                        .HasColumnType("int")
                        .HasColumnName("RecurrenceOrdinalId");

                    b.Property<int>("RecurrenceTheme")
                        .HasColumnType("int")
                        .HasColumnName("RecurrenceThemeId");

                    b.Property<int>("ReminderTheme")
                        .HasColumnType("int")
                        .HasColumnName("ReminderThemeId");

                    b.Property<int?>("TransactionFromAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("TransactionToAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("WhenBegins")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WhenExpires")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InactiveReason");

                    b.HasIndex("RecurrenceDayOfWeek");

                    b.HasIndex("RecurrenceOrdinal");

                    b.HasIndex("RecurrenceTheme");

                    b.HasIndex("ReminderTheme");

                    b.HasIndex("TransactionFromAccountId");

                    b.HasIndex("TransactionToAccountId");

                    b.ToTable("Reminder", (string)null);
                });

            modelBuilder.Entity("Mayflower.Core.DomainModels.ReminderOccurrence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReasonForOccurrence")
                        .HasColumnType("int")
                        .HasColumnName("OccurrenceReasonId");

                    b.Property<int>("ReminderId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("WhenCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("WhenOriginallyScheduledToOccur")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WhenRescheduledToOccur")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ReasonForOccurrence");

                    b.HasIndex("ReminderId");

                    b.ToTable("ReminderOccurrence", (string)null);
                });

            modelBuilder.Entity("Mayflower.Core.DomainModels.ReminderOccurrenceReason", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("ReminderOccurrenceReason", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "Unknown",
                            Value = "Unknown"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Skip",
                            Value = "Skip"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Completion",
                            Value = "Completion"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Edit",
                            Value = "Edit"
                        });
                });

            modelBuilder.Entity("Mayflower.Core.DomainModels.ReminderTheme", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("ReminderTheme", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "Error",
                            Value = "Error"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Bill",
                            Value = "Bill"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Income",
                            Value = "Income"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Transfer",
                            Value = "Transfer"
                        });
                });

            modelBuilder.Entity("Mayflower.Core.DomainModels.TransactionTheme", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("TransactionTheme", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "None",
                            Value = "None"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Withdraw",
                            Value = "Withdraw"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Deposit",
                            Value = "Deposit"
                        });
                });

            modelBuilder.Entity("Mayflower.Core.DomainModels.FinancialAccount", b =>
                {
                    b.HasOne("Mayflower.Core.DomainModels.FinancialAccountTheme", "_financialAccountTheme")
                        .WithMany()
                        .HasForeignKey("FinancialAccountTheme")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mayflower.Core.DomainModels.FinancialInstitution", "FinancialInstitution")
                        .WithMany()
                        .HasForeignKey("FinancialInstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinancialInstitution");

                    b.Navigation("_financialAccountTheme");
                });

            modelBuilder.Entity("Mayflower.Core.DomainModels.FinancialTransaction", b =>
                {
                    b.HasOne("Mayflower.Core.DomainModels.FinancialAccount", "FinancialAccount")
                        .WithMany("Transactions")
                        .HasForeignKey("FinancialAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinancialAccount");
                });

            modelBuilder.Entity("Mayflower.Core.DomainModels.Reminder", b =>
                {
                    b.HasOne("Mayflower.Core.DomainModels.InactiveReminderReason", "_inactiveReason")
                        .WithMany()
                        .HasForeignKey("InactiveReason");

                    b.HasOne("Mayflower.Core.DomainModels.RecurrenceDayOfWeek", "_recurrenceDayOfWeek")
                        .WithMany()
                        .HasForeignKey("RecurrenceDayOfWeek");

                    b.HasOne("Mayflower.Core.DomainModels.RecurrenceOrdinal", "_recurrenceOrdinal")
                        .WithMany()
                        .HasForeignKey("RecurrenceOrdinal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mayflower.Core.DomainModels.RecurrenceTheme", "_recurrenceTheme")
                        .WithMany()
                        .HasForeignKey("RecurrenceTheme")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mayflower.Core.DomainModels.ReminderTheme", "_reminderTheme")
                        .WithMany()
                        .HasForeignKey("ReminderTheme")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mayflower.Core.DomainModels.FinancialAccount", "TransactionFromAccount")
                        .WithMany()
                        .HasForeignKey("TransactionFromAccountId");

                    b.HasOne("Mayflower.Core.DomainModels.FinancialAccount", "TransactionToAccount")
                        .WithMany()
                        .HasForeignKey("TransactionToAccountId");

                    b.Navigation("TransactionFromAccount");

                    b.Navigation("TransactionToAccount");

                    b.Navigation("_inactiveReason");

                    b.Navigation("_recurrenceDayOfWeek");

                    b.Navigation("_recurrenceOrdinal");

                    b.Navigation("_recurrenceTheme");

                    b.Navigation("_reminderTheme");
                });

            modelBuilder.Entity("Mayflower.Core.DomainModels.ReminderOccurrence", b =>
                {
                    b.HasOne("Mayflower.Core.DomainModels.ReminderOccurrenceReason", "_occurrenceReason")
                        .WithMany()
                        .HasForeignKey("ReasonForOccurrence")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mayflower.Core.DomainModels.Reminder", "Reminder")
                        .WithMany("Occurrences")
                        .HasForeignKey("ReminderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Reminder");

                    b.Navigation("_occurrenceReason");
                });

            modelBuilder.Entity("Mayflower.Core.DomainModels.FinancialAccount", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Mayflower.Core.DomainModels.Reminder", b =>
                {
                    b.Navigation("Occurrences");
                });
#pragma warning restore 612, 618
        }
    }
}
